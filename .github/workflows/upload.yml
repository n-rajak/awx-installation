name: Push Release and Tag Artifacts to Nexus

on:
  release:
    types: [created]
  push:
    tags:
      - '*'

jobs:
  push_to_nexus:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        
      # - name: Clone Release
      #   run: |
      #     # Get the name of the latest release
      #     latest_release=$(curl -s "https://api.github.com/repos/${GITHUB_REPOSITORY}/releases/latest" | jq -r ".tag_name")
      #     echo $latest_release
      #     # Clone the repository with the latest release
      #     git clone --branch $latest_release --depth 1 https://github.com/${GITHUB_REPOSITORY}.git
      #     ls -alh
      #     pwd

      # - name: Checkout Repository
      #   uses: actions/checkout@v2

      # - name: Set up Nexus CLI
      #   uses: igor-shevchenko/nexus-cli-action@v1
      #   with:
      #     nexus-url: ${{ secrets.NEXUS_URL }}
      #     username: ${{ secrets.NEXUS_USERNAME }}
      #     password: ${{ secrets.NEXUS_PASSWORD }}

      - name: Fetch Release or Tag Artifacts
        id: fetch_artifacts
        run: |
          if [[ -n "${GITHUB_REF##refs/tags/*}" ]]; then
            # This is a release
            mkdir release_artifacts
            for asset in $(jq -r '.release.assets[].browser_download_url' $GITHUB_EVENT_PATH); do
              wget -P release_artifacts $asset
            done
            ARTIFACTS_DIR="release_artifacts"
          else
            # This is a tag
            ARTIFACTS_DIR="."
            git archive -o tag_artifacts.zip --format=zip HEAD
          fi
          echo "name=artifacts_dir=$ARTIFACTS_DIR" >>$GITHUB_OUTPUT
          ls -alh
          pwd

      # - name: Push Artifacts to Nexus
      #   run: |
      #     cd ${{ steps.fetch_artifacts.outputs.artifacts_dir }}
      #     nexus-cli upload --repository <repository_name> *
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
      #     NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}


      # - name: Checkout Repository
      #   uses: actions/checkout@v2

      # - name: Get Latest Tag
      #   id: get_latest_tag
      #   run: |
      #     git fetch --tags
      #     latest_tag=$(git describe --tags `git rev-list --tags --max-count=1`)
      #     echo "name=latest_tag=$latest_tag" >>$GITHUB_OUTPUT

      # - name: Get Tag Name
      #   id: get_tag_name
      #   run: echo "name=tag_name=${GITHUB_REF/refs\/tags\//}" >>$GITHUB_OUTPUT